// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAEIS.WebSite.Data;

namespace SAEIS.WebSite.Data.Migrations
{
    [DbContext(typeof(SAEISContext))]
    [Migration("20201104103531_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SAEIS.WebSite.Data.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClassificationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("ClassificationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classification");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConditionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnName("ConditionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DatasetID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("DatasetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dataset");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.DatasetVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DatasetVariableID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DatasetId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnName("LinkToDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariableType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatasetId");

                    b.ToTable("DatasetVariable");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Estuary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EstuaryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlienClearingYN")
                        .HasColumnName("AlienClearing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AreaCatchment")
                        .HasColumnType("int");

                    b.Property<int?>("AreaCatchmentDEAT")
                        .HasColumnType("int");

                    b.Property<decimal?>("AreaFloodplain")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AreaWater")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BiodiversityImportance")
                        .HasColumnName("BiodiversityConsImp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClassificationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ConditionId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemandCategoryRDM")
                        .HasColumnName("DemandCatRDM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DemandScoreRDM")
                        .HasColumnName("DemandScoreRDM")
                        .HasColumnType("int");

                    b.Property<string>("FixAppropriateBankStabilisationYN")
                        .HasColumnName("FixAppropriateBankStabilisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeomorphologyId")
                        .HasColumnType("int");

                    b.Property<int?>("HabitatImportance")
                        .HasColumnName("HabitatConsImp")
                        .HasColumnType("int");

                    b.Property<string>("ImportanceCategoryRDM")
                        .HasColumnName("ImpCatRDM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ImportanceScoreRDM")
                        .HasColumnName("ImpScoreRDM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InfoAvailableId")
                        .HasColumnType("int");

                    b.Property<string>("LandCoverReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnName("LatitudeDecimalDegrees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("LengthRiver")
                        .HasColumnType("int");

                    b.Property<decimal?>("LengthShoreLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnName("LongitudeDecimalDegrees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ManagementClassificationId")
                        .HasColumnType("int");

                    b.Property<int?>("MeanAnnualRunoff")
                        .HasColumnName("MARunnoff")
                        .HasColumnType("int");

                    b.Property<int?>("MinFlowRequirement")
                        .HasColumnName("MinFlowReq")
                        .HasColumnType("int");

                    b.Property<string>("MouthManagementYN")
                        .HasColumnName("MouthManagement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MouthOpen")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("EstuaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalImportance")
                        .HasColumnName("NationalConsImp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalPriorityRDM")
                        .HasColumnName("PriorityRDM")
                        .HasColumnType("int");

                    b.Property<int?>("PercentAgriculture")
                        .HasColumnType("int");

                    b.Property<int?>("PercentDegraded")
                        .HasColumnType("int");

                    b.Property<int?>("PercentNatural")
                        .HasColumnType("int");

                    b.Property<int?>("PercentUrban")
                        .HasColumnName("PecentUrban")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityForRehabilitationId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("ProvincialImportance")
                        .HasColumnName("ProvincialConsImp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RankImportance")
                        .HasColumnName("RankConsImp")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnName("BioRegionID")
                        .HasColumnType("int");

                    b.Property<string>("RehabilitationComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SanctuaryProtectionId")
                        .HasColumnName("SancutaryProtectionID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ScoreImportance")
                        .HasColumnName("ScoreConsImp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SizeImportance")
                        .HasColumnName("SizeConsImp")
                        .HasColumnType("int");

                    b.Property<int?>("UndevelopedMarginId")
                        .HasColumnType("int");

                    b.Property<int?>("WaterQualityId")
                        .HasColumnType("int");

                    b.Property<string>("WaterQualityPollutionYN")
                        .HasColumnName("WaterQualityPollution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterQualitySiltYN")
                        .HasColumnName("WaterQualitySilt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterQuantityYN")
                        .HasColumnName("WaterQuantityGen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WaterRequirementId")
                        .HasColumnType("int");

                    b.Property<string>("WhitfieldLink")
                        .HasColumnName("BiblioWitfieldLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneTypeRarity")
                        .HasColumnName("ZonalRarityConsImp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("GeomorphologyId");

                    b.HasIndex("InfoAvailableId");

                    b.HasIndex("ManagementClassificationId");

                    b.HasIndex("PriorityForRehabilitationId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SanctuaryProtectionId");

                    b.HasIndex("UndevelopedMarginId");

                    b.HasIndex("WaterQualityId");

                    b.HasIndex("WaterRequirementId");

                    b.ToTable("Estuary");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryDataset", b =>
                {
                    b.Property<int>("EstuaryId")
                        .HasColumnType("int");

                    b.Property<int>("DatasetId")
                        .HasColumnType("int");

                    b.HasKey("EstuaryId", "DatasetId");

                    b.HasIndex("DatasetId");

                    b.ToTable("EstuaryDataset");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryImage", b =>
                {
                    b.Property<int>("EstuaryId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("EstuaryId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("EstuaryImage");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryLiterature", b =>
                {
                    b.Property<int>("EstuaryId")
                        .HasColumnType("int");

                    b.Property<int>("LiteratureId")
                        .HasColumnType("int");

                    b.HasKey("EstuaryId", "LiteratureId");

                    b.HasIndex("LiteratureId");

                    b.ToTable("EstuaryLiterature");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryMap", b =>
                {
                    b.Property<int>("EstuaryId")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.HasKey("EstuaryId", "MapId");

                    b.HasIndex("MapId");

                    b.ToTable("EstuaryMap");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Geomorphology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GeomorphologyID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Geomorphology");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ImageID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvailableYN")
                        .HasColumnName("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnName("ImageDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnName("LinkToImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.InfoAvailable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InfoAvailableID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfoAvailable");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IssueID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstuaryId")
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .HasColumnName("IssueHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IssueTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responses")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstuaryId");

                    b.HasIndex("IssueTypeId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.IssueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IssueTypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("IssueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssueType");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Literature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LiteratureID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableYN")
                        .HasColumnName("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnName("LinkToManuscript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnName("PublishDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Literature");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.ManagementClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ManagementClassificationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnName("ClassificationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManagementClassification");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MapID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvailableYN")
                        .HasColumnName("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnName("LinkToMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("MapName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Map");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.PriorityForRehabilitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PriorityForRehabilitationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriorityForRehabilitation");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProvinceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BioRegionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BioRegion");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.SanctuaryProtection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SancutaryProtectionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecommendedExtent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SancutaryProtection");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.UndevelopedMargin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UndevelopedMarginID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecommendedExtent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UndevelopedMargin");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.WaterQuality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WaterQualityID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaterQuality");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.WaterRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WaterRequirementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecommendedMinimum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WaterRequirement");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.DatasetVariable", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Dataset", "Dataset")
                        .WithMany("DatasetVariables")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Estuary", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Classification", "Classification")
                        .WithMany("Estuaries")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("SAEIS.WebSite.Data.Condition", "Condition")
                        .WithMany("Estuaries")
                        .HasForeignKey("ConditionId");

                    b.HasOne("SAEIS.WebSite.Data.Geomorphology", "Geomorphology")
                        .WithMany("Estuaries")
                        .HasForeignKey("GeomorphologyId");

                    b.HasOne("SAEIS.WebSite.Data.InfoAvailable", "InfoAvailable")
                        .WithMany("Estuaries")
                        .HasForeignKey("InfoAvailableId");

                    b.HasOne("SAEIS.WebSite.Data.ManagementClassification", "ManagementClassification")
                        .WithMany("Estuaries")
                        .HasForeignKey("ManagementClassificationId");

                    b.HasOne("SAEIS.WebSite.Data.PriorityForRehabilitation", "PriorityForRehabilitation")
                        .WithMany("Estuaries")
                        .HasForeignKey("PriorityForRehabilitationId");

                    b.HasOne("SAEIS.WebSite.Data.Province", "Province")
                        .WithMany("Estuaries")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("SAEIS.WebSite.Data.Region", "Region")
                        .WithMany("Estuaries")
                        .HasForeignKey("RegionId");

                    b.HasOne("SAEIS.WebSite.Data.SanctuaryProtection", "SanctuaryProtection")
                        .WithMany("Estuaries")
                        .HasForeignKey("SanctuaryProtectionId");

                    b.HasOne("SAEIS.WebSite.Data.UndevelopedMargin", "UndevelopedMargin")
                        .WithMany("Estuaries")
                        .HasForeignKey("UndevelopedMarginId");

                    b.HasOne("SAEIS.WebSite.Data.WaterQuality", "WaterQuality")
                        .WithMany("Estuaries")
                        .HasForeignKey("WaterQualityId");

                    b.HasOne("SAEIS.WebSite.Data.WaterRequirement", "WaterRequirement")
                        .WithMany("Estuaries")
                        .HasForeignKey("WaterRequirementId");
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryDataset", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Dataset", "Dataset")
                        .WithMany()
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAEIS.WebSite.Data.Estuary", "Estuary")
                        .WithMany("EstuaryDatasets")
                        .HasForeignKey("EstuaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryImage", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Estuary", "Estuary")
                        .WithMany("EstuaryImages")
                        .HasForeignKey("EstuaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAEIS.WebSite.Data.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryLiterature", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Estuary", "Estuary")
                        .WithMany("EstuaryLiteratures")
                        .HasForeignKey("EstuaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAEIS.WebSite.Data.Literature", "Literature")
                        .WithMany("EstuaryLiteratures")
                        .HasForeignKey("LiteratureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.EstuaryMap", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Estuary", "Estuary")
                        .WithMany("EstuaryMaps")
                        .HasForeignKey("EstuaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAEIS.WebSite.Data.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAEIS.WebSite.Data.Issue", b =>
                {
                    b.HasOne("SAEIS.WebSite.Data.Estuary", "Estuary")
                        .WithMany("Issues")
                        .HasForeignKey("EstuaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAEIS.WebSite.Data.IssueType", "IssueType")
                        .WithMany("Issues")
                        .HasForeignKey("IssueTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
